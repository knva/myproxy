name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build-and-release:
    name: Build and Release
    permissions:
      contents: write
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            asset_name_suffix: "windows-x86_64.zip"
            binary_name: "mypproxy.exe"

          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest
            asset_name_suffix: "linux-x86_64.tar.gz"
            binary_name: "mypproxy"

          - target: x86_64-apple-darwin
            os: macos-latest
            asset_name_suffix: "macos-x86_64.tar.gz"
            binary_name: "mypproxy"

          - target: aarch64-apple-darwin
            os: macos-latest
            asset_name_suffix: "macos-aarch64.tar.gz"
            binary_name: "mypproxy"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          target: ${{ matrix.target }}

      - name: Build binary
        run: cargo build --release --target ${{ matrix.target }}

      - name: Package binary (Windows)
        if: matrix.os == 'windows-latest'
        run: Compress-Archive -Path target\${{ matrix.target }}\release\${{ matrix.binary_name }} -DestinationPath ${{ matrix.asset_name_suffix }}
        shell: pwsh

      - name: Package binary (Linux/macOS)
        if: matrix.os != 'windows-latest'
        run: tar czvf ${{ matrix.asset_name_suffix }} -C target/${{ matrix.target }}/release ${{ matrix.binary_name }}

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: "${{ matrix.asset_name_suffix }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
